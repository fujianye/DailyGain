题目描述
一个网站有 100 亿 url 存在一个黑名单中，每条 url 平均 64 字节。这个黑名单要怎么存？若此时随便输入一个 url，你如何快速判断该 url 是否在这个黑名单中？

解法一：散列表
100 亿是一个很大的数量级，这里每条 url 平均 64 字节，全部存储的话需要 640G 的内存空间。
又因为使用了散列表这种数据结构，而散列表是会出现散列冲突的。为了让散列表维持较小的装载因子，避免出现过多的散列冲突，需要使用链表法来处理，这里就要存储链表指针。
因此最后的内存空间可能超过 1000G 了。只是存储个 url 就需要 1000G 的空间，老板肯定不能忍！

解法二：位图
位图法的所占空间随集合内最大元素的增大而增大。位图的一个不容忽视的缺点：空间复杂度随集合内最大元素增大而线性增大。

解法三：布隆过滤器
布隆过滤器是对位图的一种改进。它实际上是一个很长的二进制矢量和一系列的随机映射函数。
他可以用来判断一个元素是否存在集合里。它的优势是只需要占用很小的内存空间以及有着高效的查询效率。
对应布隆过滤器而言，它的本质是一个位数组 和 k个哈希函数。
当要判断一个值是否在布隆过滤器中，对元素进行k次哈希计算，计算结果作为数组下标，判断位数组中对应下标的元素是否为1，
如果k个位置的元素都是1，说明这个值在布隆过滤器中；如果存在一个元素的值不是1，说明该值不在布隆过滤器中。
很明显，数组的容量是有限的，随着值数量的增多，数组中被置为1的位置就越多。
存在一种情况，当某个不存在布隆过滤器中的值，要存入布隆过滤器时，它的k次哈希结果对应的k个位置的值已经都是1，这就是误判率存在的原因。

布隆过滤器的使用场景：
1、爬虫去重url、广告点击率去重
2、解决缓存击穿
3、垃圾
