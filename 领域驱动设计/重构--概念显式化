重构要按照小幅且可控的步骤进行，这样我们不会破坏功能或者引入bug。自动化测试可以提供帮助。

提高领域的认知深度。让隐式概念显式化。

约束、过程和规约，也需要显式化。

约束：将约束置于一个单独的方法让它显式化有很多优点。它很有容易阅读，并且很多人都能注意到方法从属于约束。
如果约束变得更复杂，还可以向该方法增加更多的逻辑提供增长空间。

过程：需要为过程选择一个对象，然后给他增加行为。最好的实现过程的方式是使用服务。其他的处理过程的方法如：将算法封装进一个策略对象。
并不是所有的过程都必须显式化。如果通用语言中提到了某个过程，那就需要将他显式化了。

规约：规约是用来测试一个对象是否满足特定条件。规范应该被封装在一个负责他的对象中，这是用户的规约。并且被保留在领域层中。
