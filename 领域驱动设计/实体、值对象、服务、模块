实体

值对象

服务：行为很自然地依附于一个服务，而不是被包含到其他领域对象中。如果“行为”这样的功能被包含进领域对象，就会在领域对象和被操作的对象之间建立一个强相关的关系。
众多对象之间的高耦合度是槽糕设计的一个信号，因为这会让代码很难阅读和理解，更重要的是很难变更。
如何区分“服务”和领域对象自身的“操作”？一个服务应该不是对通常属于领域对象的操作的替代。不应该为每一个领域对象的操作建立一个服务。
什么情况下，需要将“操作”建立成“服务”？满足3个条件：
1、服务执行的操作设计领域概念，这个领域概念通常不属于一个实体或者值对象。（操作不能被明确的划分到某个实体或者值对象）
2、被执行的操作设计到领域中的其他对象（操作设计到多个对象）
3、操做是无状态的
如果服务所执行的操作，概念上属于领域层，那么服务就放在领域层。如果服务所执行的操作，概念上属于基础设施层，那么服务就放在基础设施层。

模块
模块别用来作为组织领域对象和服务，以便降低复杂性的一种方法。将高关联度的类分组到一个模块可以提供尽可能大的内聚。最长用到的2种内聚是：功能性内聚和通信性内聚。
功能性内聚：在模块中的部件协调工作以完成定义好的工作。通信性内聚：模块内的部件操作相同的数据。
在设计中使用模块是一种增进内聚消除耦合的方法。模块应该有在功能上或者逻辑上属于一体的元素构成，以保证内聚。模块应该具有定义好的接口，接口可以被其他模块访问。
通过“访问一个接口”替代“调用模块中的3个对象”，可以降低耦合。低耦合降低复杂性提高可维护性。

